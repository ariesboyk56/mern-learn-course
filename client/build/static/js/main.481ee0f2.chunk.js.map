{"version":3,"sources":["components/layout/Landing.js","constants/ActionTypes.js","constants/AuthConstants.js","reducers/auth.js","utils/setAuthToken.js","help.js","actions/index.js","components/auth/LoginForm.js","components/auth/RegisterForm.js","views/Auth.js","assets/logo.svg","assets/logout.svg","components/layout/NavbarMenu.js","components/routing/ProtectedRoute.js","reducers/post.js","contexts/PostContext.js","assets/play-btn.svg","assets/pencil.svg","assets/trash.svg","components/posts/ActionButtons.js","components/posts/SinglePost.js","components/posts/AddPostModel.js","components/posts/UpdatePostModel.js","assets/plus-circle-fill.svg","views/Dashboard.js","views/About.js","App.js","reportWebVitals.js","reducers/index.js","store.js","index.js"],"names":["Landing","to","SET_AUTH","apiUrl","LOCAL_STORAGE_TOKEN_NAME","POSTS_LOADED_SUCCESS","POSTS_LOADED_FAIL","ADD_POST","DELETE_POST","UPDATE_POST","FIND_POST","initialState","authLoading","isAuthenticated","user","registerUser","userForm","a","axios","post","response","data","success","localStorage","setItem","accessToken","message","loginUser","auth","state","action","type","payload","setAuthToken","token","defaults","headers","common","loadUser","setStateAuth","get","removeItem","setAuth","types","connect","dispatch","props","useState","username","password","loginForm","setLoginForm","onChangeLoginForm","event","target","name","value","login","preventDefault","loginData","alert","console","log","Form","className","onSubmit","Group","Control","onChange","placeholder","required","Button","variant","size","confirmPassword","registerForm","setRegisterForm","onChangeRegisterForm","register","registerData","body","authRoute","Spinner","animation","Navbar","expand","bg","Brand","src","learnItLogo","alt","width","height","Toggle","Collapse","id","Nav","Link","as","disabled","onClick","logoutIcon","children","isCheck","newState","postsLoading","posts","filter","_id","newPosts","map","PostContext","createContext","PostContextProvider","showModal","setShowModal","showUpdateModal","setShowUpdateModal","show","showToast","setShowToast","useReducer","postInitialState","getPosts","addPost","newPost","deletePost","postId","delete","updatePost","updatedPost","put","postContextData","findPost","find","Provider","ActionButtons","url","useContext","href","playIcon","bind","editIcon","deleteIcon","SinglePost","Card","border","status","Body","Title","Row","Col","title","Badge","pill","Text","description","AddPostModel","setNewPost","onChangeNewPostForm","e","handleCloseModal","Modal","onHide","Header","closeButton","muted","row","Footer","UpdatePostModel","setUpdatedPost","useEffect","onChangeUpdatePostForm","Dashboard","useSelector","length","OverlayTrigger","placement","overlay","Tooltip","addIcon","Toast","style","position","top","right","onClose","delay","autohide","About","marginRight","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.481ee0f2.chunk.js","sourcesContent":["import {Navigate} from 'react-router-dom'\r\n\r\nfunction Landing() {\r\n  return <Navigate to=\"/login\" />\r\n  \r\n}\r\n\r\n\r\nexport default Landing\r\n\r\n","export const SET_AUTH = \"SET_AUTH\"","export const apiUrl = process.env.NODE_ENV !== \"production\"?\"http://localhost:8080/api\":\"https://peaceful-harbor-27782.herokuapp.com/api\"\r\nexport const LOCAL_STORAGE_TOKEN_NAME = \"learnit\"\r\n\r\n\r\nexport const POSTS_LOADED_SUCCESS = \"POSTS_LOADED_SUCCESS\"\r\nexport const POSTS_LOADED_FAIL = \"POSTS_LOADED_FAIL\"\r\n\r\nexport const ADD_POST = \"ADD_POST\"\r\nexport const DELETE_POST = \"DELETE_POST\"\r\nexport const UPDATE_POST = \"UPDATE_POST\"\r\nexport const FIND_POST = \"FIND_POST\"\r\n\r\n","import axios from \"axios\"\r\nimport {SET_AUTH} from \"../constants/ActionTypes\"\r\nimport { apiUrl, LOCAL_STORAGE_TOKEN_NAME } from \"../constants/AuthConstants\"\r\n\r\nconst initialState = {\r\n  authLoading: true,\r\n  isAuthenticated: false,\r\n  user: null\r\n}\r\n//Register trên database\r\nexport const registerUser = async userForm => {\r\n  try {\r\n    const response = await axios.post(`${apiUrl}/auth/register`, userForm)\r\n    if(response.data.success)\r\n    //Lưu accessToken trên localStorage\r\n      localStorage.setItem(LOCAL_STORAGE_TOKEN_NAME, response.data.accessToken)\r\n      \r\n    // initialState = { isAuthenticated: true, user: response.data.user }\r\n    \r\n    return response.data\r\n  } catch (error) {\r\n    if(error.response.data) return error.response.data\r\n    else return {success: false, message: error.message}\r\n  }\r\n}\r\n//Login trên database\r\nexport const loginUser = async userForm => {\r\n  try {\r\n    const response = await axios.post(`${apiUrl}/auth/login`, userForm)\r\n    if(response.data.success)\r\n    //Lưu accessToken trên localStorage\r\n      localStorage.setItem(LOCAL_STORAGE_TOKEN_NAME, response.data.accessToken)\r\n      \r\n    // initialState = { isAuthenticated: true, user: response.data.user }\r\n    \r\n    return response.data\r\n  } catch (error) {\r\n    if(error.response.data) return error.response.data\r\n    else return {success: false, message: error.message}\r\n  }\r\n}\r\n\r\nconst auth = (state=initialState, action) => {\r\n  // let newState\r\n  switch (action.type) {\r\n    case SET_AUTH:\r\n      // console.log(\"prev state\",state);\r\n      return {...state,\r\n        authLoading: false,\r\n        isAuthenticated: action.payload.isAuthenticated,\r\n        user: action.payload.user\r\n      }\r\n      // console.log(\"set lai state\",newState);\r\n      // return {...newState}\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default auth\r\n// export default {}","import axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n  if(token){\r\n    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"]\r\n  }\r\n}\r\n\r\nexport default setAuthToken","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport axios from \"axios\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport { apiUrl, LOCAL_STORAGE_TOKEN_NAME } from \"./constants/AuthConstants\";\r\n\r\n\r\n\r\n// Authenticate user\r\n export const loadUser = async ({ setStateAuth }) => {\r\n  \r\n  if (localStorage[LOCAL_STORAGE_TOKEN_NAME]) {\r\n    setAuthToken(localStorage[LOCAL_STORAGE_TOKEN_NAME]);\r\n  }\r\n  try {\r\n    const response = await axios.get(`${apiUrl}/auth`);\r\n    if (response.data.success) {\r\n      // dispatch(setAuth(response.data.user ));\r\n      // console.log(\"set lai state: true\");\r\n      setStateAuth({ isAuthenticated: true, user: response.data.user });\r\n    }\r\n  } catch (error) {\r\n    localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\r\n    setAuthToken(null);\r\n    setStateAuth({ isAuthenticated: false, user: null });\r\n  }\r\n};","import * as types from \"../constants/ActionTypes\";\r\nimport {\r\n  POSTS_LOADED_SUCCESS,\r\n  ADD_POST,\r\n  DELETE_POST,\r\n  UPDATE_POST,\r\n  FIND_POST\r\n} from \"../constants/AuthConstants\";\r\nexport const setAuth = (payload) => ({\r\n  type: types.SET_AUTH,\r\n  payload,\r\n});\r\n\r\nexport const getPostsAction = (payload) => ({\r\n  type: POSTS_LOADED_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport const addPostAction = (payload) => ({\r\n  type: ADD_POST,\r\n  payload,\r\n});\r\n\r\nexport const deletePostAction = (payload) => ({\r\n  type: DELETE_POST,\r\n  payload,\r\n});\r\n\r\nexport const updatePostAction = (payload) => ({\r\n  type: UPDATE_POST,\r\n  payload,\r\n});\r\n\r\nexport const findPostAction = (payload) => ({\r\n  type: FIND_POST,\r\n  payload,\r\n});","import { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { loginUser } from \"../../reducers/auth\";\r\nimport {loadUser} from \"../../help\"\r\n\r\nimport {setAuth} from \"../../actions\"\r\nimport { connect } from \"react-redux\";\r\n// import AlertMessage from \"../layout/AlertMessage\"\r\n\r\n// export interface IState {\r\n//   username: string;\r\n//   password: string;\r\n// }\r\n\r\n\r\nconst LoginForm = ({setStateAuth}) => {\r\n  // Router\r\n  // const history = useNavigate();\r\n\r\n  // Local state\r\n  const [loginForm, setLoginForm] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const { username, password } = loginForm;\r\n  // const [alert, setAlert] = useState(null)\r\n  const onChangeLoginForm = (event) =>\r\n    setLoginForm({\r\n      ...loginForm,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n\r\n\r\n  // Kiểm tra username và password khi login\r\n  const login = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    try {\r\n      const loginData = await loginUser(loginForm);\r\n      // console.log(\"Login Form\", loginData);\r\n\r\n      if (loginData.success) {\r\n        // Login Success\r\n        // history(\"/dashboard\");\r\n        loadUser({setStateAuth})\r\n      } else {\r\n        // Login fail\r\n        alert(loginData.message)\r\n        // setAlert({type: \"danger\",message: loginData.message})\r\n        // setTimeout(setAlert(null), 5000)\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error Login Form\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form className=\"my-2\" onSubmit={login}>\r\n        {/* <AlertMessage type={alert} /> */}\r\n        <Form.Group className=\"my-2\">\r\n          <Form.Control\r\n            onChange={onChangeLoginForm}\r\n            value={username}\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            name=\"username\"\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"my-2\">\r\n          <Form.Control\r\n            onChange={onChangeLoginForm}\r\n            value={password}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"success\" type=\"submit\">\r\n          Login\r\n        </Button>\r\n      </Form>\r\n      <p>\r\n        Don't have an account?\r\n        <Link to=\"/register\">\r\n          <Button variant=\"info\" size=\"sm\" className=\"ml-2\">\r\n            Register\r\n          </Button>\r\n        </Link>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\n// export default LoginForm;\r\n\r\nconst mapStateToProps = state => {\r\n  return{\r\n    \r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n\r\n  return{\r\n      setStateAuth: (data) => {\r\n          dispatch(setAuth(data))\r\n      }\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(LoginForm);\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { registerUser } from \"../../reducers/auth\";\r\nimport {loadUser} from \"../../help\"\r\n\r\nimport {setAuth} from \"../../actions\"\r\nimport { connect } from \"react-redux\";\r\nconst RegisterForm = ({setStateAuth}) => {\r\n  // Local state\r\n  const [registerForm, setRegisterForm] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const { username, password, confirmPassword } = registerForm;\r\n  const onChangeRegisterForm = (event) =>\r\n    setRegisterForm({\r\n      ...registerForm,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n\r\n  const register = async (event) => {\r\n    event.preventDefault();\r\n    if(password !== confirmPassword){\r\n      alert(\"Password do not match\")\r\n    }\r\n    try {\r\n      const registerData = await registerUser(registerForm);\r\n\r\n      if (registerData.success) {\r\n        // Login Success\r\n        // history(\"/dashboard\");\r\n        loadUser({setStateAuth})\r\n      } else {\r\n        // Login fail\r\n        alert(registerData.message);\r\n        // setAlert({type: \"danger\", message: loginData.message})\r\n        // setTimeout(setAlert(null), 5000)\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error Login Form\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Form className=\"my-2\" onSubmit={register}>\r\n        <Form.Group className=\"my-2\">\r\n          <Form.Control\r\n          onChange={onChangeRegisterForm}\r\n          value={username}\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            name=\"username\"\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"my-2\">\r\n          <Form.Control\r\n          onChange={onChangeRegisterForm}\r\n          value={password}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"my-2\">\r\n          <Form.Control\r\n          onChange={onChangeRegisterForm}\r\n          value={confirmPassword}\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            name=\"confirmPassword\"\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"success\" type=\"submit\">\r\n          Register\r\n        </Button>\r\n      </Form>\r\n      <p>\r\n        Already have an account?\r\n        <Link to=\"/login\">\r\n          <Button variant=\"info\" size=\"sm\" className=\"ml-2\">\r\n            Login\r\n          </Button>\r\n        </Link>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\n// export default RegisterForm;\r\nconst mapStateToProps = state => {\r\n  return{\r\n    \r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n\r\n  return{\r\n      setStateAuth: (data) => {\r\n          dispatch(setAuth(data))\r\n      }\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(RegisterForm);","import { connect } from \"react-redux\";\r\nimport LoginForm from \"../components/auth/LoginForm\";\r\nimport RegisterForm from \"../components/auth/RegisterForm\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n// import { useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\n\r\n\r\n// Blink params props Version 6\r\n// type AuthProps = {\r\n//   authRoute: React.ReactNode;\r\n// }\r\n\r\nconst Auth = ({ authRoute,auth }) => {\r\n  let body;\r\n  if (auth.authLoading) {\r\n    body = (\r\n      <div className=\"d-flex justify-content-center mt-2\">\r\n        <Spinner animation=\"border\" variant=\"info\" />\r\n      </div>\r\n    );\r\n  } else if (auth.isAuthenticated) {\r\n    body =(\r\n      <Navigate to=\"/dashboard\" />\r\n    )\r\n  } else {\r\n    body = (\r\n      <>\r\n        {authRoute === \"login\" && <LoginForm />}\r\n        {authRoute === \"register\" && <RegisterForm />}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"landing\">\r\n      <div className=\"dark-overlay\">\r\n        <div className=\"landing-inner\">\r\n          <h1>LearnIT</h1>\r\n          <h4>Keep track of what you are learning</h4>\r\n          {body}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return{\r\n    auth: state.auth\r\n  }\r\n}\r\nexport default connect(mapStateToProps, null)(Auth);\r\n","export default __webpack_public_path__ + \"static/media/logo.d8417b80.svg\";","export default __webpack_public_path__ + \"static/media/logout.8e64276b.svg\";","import Navbar from \"react-bootstrap/Navbar\"\r\nimport { setAuth } from \"../../actions\";\r\nimport Nav from \"react-bootstrap/Nav\"\r\nimport {connect} from \"react-redux\"\r\nimport { Link } from 'react-router-dom'\r\nimport Button from \"react-bootstrap/Button\"\r\nimport learnItLogo from \"../../assets/logo.svg\"\r\nimport logoutIcon from \"../../assets/logout.svg\"\r\nimport { LOCAL_STORAGE_TOKEN_NAME } from \"../../constants/AuthConstants\"\r\n\r\nconst NavbarMenu = ({auth, setStateAuth}) => {\r\n\tconst username = auth.user.username\r\n  // const {\r\n\t// \tauthState: {\r\n\t// \t\tuser: { username }\r\n\t// \t},\r\n\t// \tlogoutUser\r\n\t// } = useContext(AuthContext)\r\n// Logout\r\nconst logoutUser = () => {\r\n  localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME)\r\n\tsetStateAuth({ isAuthenticated: false, user: null });\r\n}\r\n\tconst logout = () => logoutUser()\r\n  return (\r\n    <Navbar expand='lg' bg='primary' variant='dark' className='shadow'>\r\n\t\t\t<Navbar.Brand className='font-weight-bolder text-white'>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={learnItLogo}\r\n\t\t\t\t\talt='learnItLogo'\r\n\t\t\t\t\twidth='32'\r\n\t\t\t\t\theight='32'\r\n\t\t\t\t\tclassName='mr-2'\r\n\t\t\t\t/>\r\n\t\t\t\tLearnIt\r\n\t\t\t</Navbar.Brand>\r\n\r\n\t\t\t<Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n\r\n\t\t\t<Navbar.Collapse id='basic-navbar-nav'>\r\n\t\t\t\t<Nav className='mr-auto'>\r\n\t\t\t\t\t<Nav.Link\r\n\t\t\t\t\t\tclassName='font-weight-bolder text-white'\r\n\t\t\t\t\t\tto='/dashboard'\r\n\t\t\t\t\t\tas={Link}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tDashboard\r\n\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t<Nav.Link\r\n\t\t\t\t\t\tclassName='font-weight-bolder text-white'\r\n\t\t\t\t\t\tto='/about'\r\n\t\t\t\t\t\tas={Link}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAbout\r\n\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t</Nav>\r\n\r\n\t\t\t\t<Nav>\r\n\t\t\t\t\t<Nav.Link className='font-weight-bolder text-white' disabled>\r\n\t\t\t\t\t\tWelcome { username }\r\n\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant='secondary'\r\n\t\t\t\t\t\tclassName='font-weight-bolder text-white'\r\n\t\t\t\t\t\tonClick={logout}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc={logoutIcon}\r\n\t\t\t\t\t\t\talt='logoutIcon'\r\n\t\t\t\t\t\t\twidth='32'\r\n\t\t\t\t\t\t\theight='32'\r\n\t\t\t\t\t\t\tclassName='mr-2'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\tLogout\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Nav>\r\n\t\t\t</Navbar.Collapse>\r\n\t\t</Navbar>\r\n  )\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    setStateAuth: (data) => {\r\n      dispatch(setAuth(data));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps,mapDispatchToProps)(NavbarMenu)\r\n","import {  Navigate } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"react-bootstrap/Spinner\"\r\nimport NavbarMenu from \"../layout/NavbarMenu\";\r\n\r\nconst ProtectedRoute = ({auth,children}) => {\r\n\r\n  const isCheck = auth.isAuthenticated;\r\n  if(auth.authLoading){\r\n      <div className=\"spinner-container\">\r\n        <Spinner animation=\"border\" variant=\"info\" />\r\n      </div>\r\n  }\r\n  return isCheck ? <>\r\n  <NavbarMenu />\r\n  {children}\r\n  </> : <Navigate to=\"/login\" />;\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return{\r\n    auth: state.auth\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,null)(ProtectedRoute)\r\n","import * as types from \"../constants/AuthConstants\";\r\n\r\nexport const post = (state, action) => {\r\n  // const {type, payload} = action\r\n  switch (action.type) {\r\n    case types.POSTS_LOADED_SUCCESS:\r\n      // console.log(\"Get posts success: prev state\", state);\r\n      let newState = {\r\n        ...state,\r\n        postsLoading: false,\r\n        posts: action.payload,\r\n      };\r\n      // console.log(\"Get posts success: new state\", newState);\r\n\r\n      return { ...newState };\r\n    case types.POSTS_LOADED_FAIL:\r\n      // console.log(\"Get posts fail\", action.payload);\r\n\r\n      return {\r\n        ...state,\r\n        postsLoading: false,\r\n        posts: [],\r\n      };\r\n    case types.ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, action.payload],\r\n      };\r\n    case types.DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts.filter((post) => post._id !== action.payload)],\r\n      };\r\n    case types.FIND_POST:\r\n      return {\r\n        ...state,\r\n        post: action.payload,\r\n      };\r\n    case types.UPDATE_POST:\r\n      let newPosts = state.posts.map((post) =>\r\n        post._id === action.payload._id ? action.payload : post\r\n      );\r\n      return { ...state, posts: newPosts };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createContext, useReducer, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { post } from \"../reducers/post\";\r\nimport { apiUrl, POSTS_LOADED_FAIL } from \"../constants/AuthConstants\";\r\nimport { getPostsAction, addPostAction, deletePostAction, updatePostAction, findPostAction } from \"../actions\";\r\n\r\nexport const PostContext = createContext();\r\n\r\nconst PostContextProvider = ({ children }) => {\r\n  //Set State Open - Close Modal\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const [showUpdateModal, setShowUpdateModal] = useState(false);\r\n\r\n\r\n  //State Toast\r\n  const [showToast, setShowToast] = useState({\r\n    show: false,\r\n    message: \"\",\r\n    type: null,\r\n  });\r\n\r\n  //initialState\r\n  const [postInitialState, dispatch] = useReducer(post, {\r\n    post: null,\r\n    posts: [],\r\n    postsLoading: true,\r\n  });\r\n\r\n  // Get all post\r\n  const getPosts = async () => {\r\n    try {\r\n      const response = await axios.get(`${apiUrl}/posts`);\r\n      if (response.data.success) {\r\n        // console.log(\"test getPost PostContext: \", response.data.posts);\r\n        dispatch(getPostsAction(response.data.posts));\r\n      }\r\n    } catch (error) {\r\n      // console.log(\"test getPost PostContext: false\");\r\n\r\n      dispatch({ type: POSTS_LOADED_FAIL });\r\n    }\r\n  };\r\n\r\n  // Add post\r\n  const addPost = async (newPost) => {\r\n    try {\r\n      const response = await axios.post(`${apiUrl}/posts`, newPost);\r\n      if (response.data.success) {\r\n        dispatch(addPostAction(response.data.post));\r\n        // trả về post mới và success\r\n        return response.data;\r\n      }\r\n    } catch (error) {\r\n      return error.response.data\r\n        ? error.response.data\r\n        : { success: false, message: \"Server error\" };\r\n    }\r\n  };\r\n\r\n  // Delete post\r\n  const deletePost = async (postId) => {\r\n    try {\r\n      const response = await axios.delete(`${apiUrl}/posts/${postId}`);\r\n      if (response.data.success) dispatch(deletePostAction(postId));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // Find post when user updating posts\r\n  const findPost = postId => {\r\n    const post = postInitialState.posts.find(post => post._id ===postId)\r\n    dispatch(findPostAction(post))\r\n  }\r\n\r\n  // Update post\r\n  const updatePost = async updatedPost => {\r\n    try {\r\n      const response = await axios.put(`${apiUrl}/posts/${updatedPost._id}`, updatedPost)\r\n      if(response.data.success){\r\n        dispatch(updatePostAction(response.data.post))\r\n        return response.data\r\n      }\r\n    } catch (error) {\r\n      return error.response.data\r\n        ? error.response.data\r\n        : { success: false, message: \"Server error\" };\r\n    }\r\n  }\r\n\r\n  // xuất post state\r\n  const postContextData = {\r\n    postInitialState,\r\n    getPosts,\r\n    addPost,\r\n    showModal,\r\n    setShowModal,\r\n    showUpdateModal,\r\n    setShowUpdateModal,\r\n    showToast,\r\n    setShowToast,\r\n    deletePost,\r\n    updatePost,\r\n    findPost\r\n  };\r\n\r\n  return (\r\n    <PostContext.Provider value={postContextData}>\r\n      {children}\r\n    </PostContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PostContextProvider;\r\n","export default __webpack_public_path__ + \"static/media/play-btn.4f64bd9b.svg\";","export default __webpack_public_path__ + \"static/media/pencil.f9418d96.svg\";","export default __webpack_public_path__ + \"static/media/trash.61142061.svg\";","import Button from 'react-bootstrap/Button'\nimport playIcon from '../../assets/play-btn.svg'\nimport editIcon from '../../assets/pencil.svg'\nimport deleteIcon from '../../assets/trash.svg'\nimport { PostContext } from '../../contexts/PostContext'\nimport { useContext } from 'react'\n\nconst ActionButtons = ({ url, _id }) => {\n\tconst { deletePost, findPost, setShowUpdateModal } = useContext(\n\t\tPostContext\n\t)\n\n\tconst choosePost = postId => {\n\t\tfindPost(postId)\n\t\tsetShowUpdateModal(true)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Button className='post-button' href={url} target='_blank'>\n\t\t\t\t<img src={playIcon} alt='play' width='32' height='32' />\n\t\t\t</Button>\n\t\t\t<Button className='post-button'\n\t\t\t onClick={choosePost.bind(this, _id)}\n\t\t\t >\n\t\t\t\t<img src={editIcon} alt='edit' width='24' height='24' />\n\t\t\t</Button>\n\t\t\t<Button className='post-button'\n\t\t\t onClick={deletePost.bind(this, _id)}\n\t\t\t >\n\t\t\t\t<img src={deleteIcon} alt='delete' width='24' height='24' />\n\t\t\t</Button>\n\t\t</>\n\t)\n}\n\nexport default ActionButtons\n","import Card from \"react-bootstrap/Card\"\r\nimport Row from \"react-bootstrap/Row\"\r\nimport Col from \"react-bootstrap/Col\"\r\nimport Badge from \"react-bootstrap/Badge\"\r\nimport ActionButtons from './ActionButtons'\r\n\r\n\r\nconst SinglePost = ({post}) => {\r\n  // Props\r\n    // post: {_id, status, title, description, url}\r\n    // console.log(\"test truyen props posts\", post);\r\n  return (\r\n    <Card\r\n\t\tclassName='shadow'\r\n\t\tborder={\r\n\t\t\tpost.status === 'LEARNED'\r\n\t\t\t\t? 'success'\r\n\t\t\t\t: post.status === 'LEARNING'\r\n\t\t\t\t? 'warning'\r\n\t\t\t\t: 'danger'\r\n\t\t}\r\n\t>\r\n\t\t<Card.Body>\r\n\t\t\t<Card.Title>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<p className='post-title'>{post.title}</p>\r\n\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\tpill\r\n\t\t\t\t\t\t\tvariant={\r\n\t\t\t\t\t\t\t\tpost.status === 'LEARNED'\r\n\t\t\t\t\t\t\t\t\t? 'success'\r\n\t\t\t\t\t\t\t\t\t: post.status === 'LEARNING'\r\n\t\t\t\t\t\t\t\t\t? 'warning'\r\n\t\t\t\t\t\t\t\t\t: 'danger'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{post.status}\r\n\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col className='text-right'>\r\n\t\t\t\t\t\t<ActionButtons url={post.url} _id={post._id} />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Title>\r\n\t\t\t<Card.Text>{post.description}</Card.Text>\r\n\t\t</Card.Body>\r\n\t</Card>\r\n  )\r\n}\r\n\r\nexport default SinglePost\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { PostContext } from \"../../contexts/PostContext\";\r\nimport { useContext, useState } from \"react\";\r\nconst AddPostModel = () => {\r\n  //State PostsContext\r\n  const { setShowModal, showModal,addPost,setShowToast } = useContext(PostContext);\r\n\r\n  // State\r\n  const [newPost, setNewPost] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    url: \"\",\r\n    status: \"TOLEARN\",\r\n  });\r\n\r\n  const { title, description, url } = newPost;\r\n  const onChangeNewPostForm = (e) =>\r\n    setNewPost({ ...newPost, [e.target.name]: e.target.value });\r\n\r\n\r\n  const handleCloseModal = () => {\r\n    setNewPost({\r\n      title: \"\",\r\n      description: \"\",\r\n      url: \"\",\r\n      status: \"TOLEARN\",\r\n    });\r\n    setShowModal(false);\r\n  };\r\n  // const handleOpenModal = () => setShowModal(true)\r\n\r\n  //.....\r\n  const onSubmit = async event => {\r\n    event.preventDefault();\r\n    const {success, message} = await addPost(newPost)\r\n    handleCloseModal()\r\n    setShowToast({show:true,message,type: success?\"success\":\"danger\"})\r\n  }\r\n\r\n  return (\r\n    <Modal show={showModal} onHide={handleCloseModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>What do you want to learn ?</Modal.Title>\r\n      </Modal.Header>\r\n      <Form onSubmit={onSubmit}>\r\n        <Modal.Body>\r\n        <Form.Group>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Title\"\r\n            name=\"title\"\r\n            required\r\n            aria-describedby=\"title-help\"\r\n            value={title}\r\n            onChange={onChangeNewPostForm}\r\n          />\r\n          <Form.Text id=\"title-help\" muted>\r\n            Required\r\n          </Form.Text>\r\n        </Form.Group>\r\n        <Form.Group className=\"my-2\">\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            row={3}\r\n            placeholder=\"Description\"\r\n            name=\"description\"\r\n            value={description}\r\n            onChange={onChangeNewPostForm}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"my-4\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Youtube Tutorial URL\"\r\n            name=\"url\"\r\n            value={url}\r\n            onChange={onChangeNewPostForm}\r\n          />\r\n        </Form.Group>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleCloseModal}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Learn\r\n        </Button>\r\n      </Modal.Footer>\r\n      </Form>\r\n      \r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddPostModel;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { PostContext } from \"../../contexts/PostContext\";\r\nimport { useContext, useState,useEffect } from \"react\";\r\nconst UpdatePostModel = () => {\r\n  //State PostsContext\r\n  const {\r\n    postInitialState: { post },\r\n    showUpdateModal,\r\n    setShowUpdateModal,\r\n    updatePost,\r\n    setShowToast,\r\n  } = useContext(PostContext);\r\n\r\n  // State\r\n  const [updatedPost, setUpdatedPost] = useState({ post });\r\n\tuseEffect(() => setUpdatedPost(post), [post])\r\n\r\n  const { title, description, url, status } = updatedPost;\r\n  const onChangeUpdatePostForm = (e) =>\r\n    setUpdatedPost({ ...updatedPost, [e.target.name]: e.target.value });\r\n\r\n  const handleCloseModal = () => {\r\n\t\tsetUpdatedPost(post)\r\n    setShowUpdateModal(false);\r\n  };\r\n  // const handleOpenModal = () => setShowModal(true)\r\n\r\n  //.....\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const { success, message } = await updatePost(updatedPost);\r\n    handleCloseModal();\r\n    setShowToast({ show: true, message, type: success ? \"success\" : \"danger\" });\r\n  };\r\n\r\n  return (\r\n    <Modal show={showUpdateModal} onHide={handleCloseModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Making progress ?</Modal.Title>\r\n      </Modal.Header>\r\n      <Form onSubmit={onSubmit}>\r\n        <Modal.Body>\r\n          <Form.Group>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Title\"\r\n              name=\"title\"\r\n              required\r\n              aria-describedby=\"title-help\"\r\n              value={title}\r\n              onChange={onChangeUpdatePostForm}\r\n            />\r\n            <Form.Text id=\"title-help\" muted>\r\n              Required\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Form.Group className=\"my-2\">\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              row={3}\r\n              placeholder=\"Description\"\r\n              name=\"description\"\r\n              value={description}\r\n              onChange={onChangeUpdatePostForm}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"my-4\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Youtube Tutorial URL\"\r\n              name=\"url\"\r\n              value={url}\r\n              onChange={onChangeUpdatePostForm}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={status}\r\n              name=\"status\"\r\n              onChange={onChangeUpdatePostForm}\r\n            >\r\n              <option value=\"TOLEARN\">TO LEARN</option>\r\n              <option value=\"LEARNING\">LEARNING</option>\r\n              <option value=\"LEARNED\">LEARNED</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleCloseModal}>Cancel</Button>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Learn\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default UpdatePostModel;\r\n","export default __webpack_public_path__ + \"static/media/plus-circle-fill.a9d0f92d.svg\";","import { useContext, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Toast from \"react-bootstrap/Toast\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport { PostContext } from \"../contexts/PostContext\";\r\nimport SinglePost from \"../components/posts/SinglePost\";\r\nimport AddPostModel from \"../components/posts/AddPostModel\";\r\nimport UpdatePostModel from \"../components/posts/UpdatePostModel\";\r\nimport addIcon from \"../assets/plus-circle-fill.svg\";\r\n\r\nconst Dashboard = () => {\r\n  // Context State\r\n  const {\r\n    postInitialState: { post, posts, postsLoading },\r\n    getPosts,\r\n    setShowModal,\r\n    showToast: { show, message, type },\r\n    setShowToast\r\n  } = useContext(PostContext);\r\n  //postInitialState: {posts, postsLoading}\r\n  // console.log(\"postInitialState children posts\", posts);\r\n\r\n  const state = useSelector((state) => state.auth);\r\n  const { username } = state.user;\r\n  // console.log(\"postInitialState children auth\", username);\r\n\r\n  // Get all post\r\n  useEffect(() => {\r\n    getPosts();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  let body = null;\r\n  if (postsLoading) {\r\n    body = (\r\n      <div className=\"spinner-container\">\r\n        <Spinner animation=\"border\" variant=\"info\" />\r\n      </div>\r\n    );\r\n  } else if (posts.length === 0) {\r\n    body = (\r\n      <>\r\n        <Card className=\"text-center mx-5 my-5\">\r\n          <Card.Header as=\"h1\">Hi {username}</Card.Header>\r\n          <Card.Body>\r\n            <Card.Title>Welcome to LearnIT</Card.Title>\r\n            <Card.Text>\r\n              Click the button below to track your first skills to learn\r\n            </Card.Text>\r\n            <Button onClick={setShowModal.bind(this, true)} variant=\"primary\">\r\n              Learn\r\n            </Button>\r\n          </Card.Body>\r\n        </Card>\r\n      </>\r\n    );\r\n  } else {\r\n    body = (\r\n      <>\r\n        <Row className=\"row-cols-1 row-cols-md-3 g-4 mx-auto mt-3\">\r\n          {posts.map((post) => (\r\n            <Col key={post._id} className=\"my-2\">\r\n              <SinglePost post={post} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n\r\n        {/* Open Add Post Modal */}\r\n        <OverlayTrigger\r\n          placement=\"left\"\r\n          overlay={<Tooltip>Add a new thing to learn</Tooltip>}\r\n        >\r\n          <Button\r\n            className=\"btn-floating\"\r\n            onClick={setShowModal.bind(this, true)}\r\n          >\r\n            <img src={addIcon} alt=\"add-post\" width=\"60\" height=\"60\" />\r\n          </Button>\r\n        </OverlayTrigger>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <h1>\r\n      {body}\r\n      <AddPostModel />\r\n\r\n      {post!==null && <UpdatePostModel />}\r\n\r\n      {/* After post is added, show toast */}\r\n      <Toast\r\n        show={show}\r\n        style={{ position: \"fixed\", top: \"20%\", right: \"10px\" }}\r\n        className={`bg-${type} text-white`}\r\n        onClose={setShowToast.bind(this, {\r\n          show: false,\r\n          message: \"\",\r\n          type: null,\r\n        })}\r\n        delay={3000}\r\n        autohide\r\n      >\r\n        <Toast.Body>\r\n          <strong>{message}</strong>\r\n        </Toast.Body>\r\n      </Toast>\r\n    </h1>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nconst About = () => {\n\treturn (\n\t\t<Row className='mt-5' style={{ marginRight: 0 }}>\n\t\t\t<Col className='text-center'>\n\t\t\t\t<Button\n\t\t\t\t\tvariant='primary'\n\t\t\t\t\ttarget='_blank'\n\t\t\t\t\thref='https://www.facebook.com/'\n\t\t\t\t\tsize='lg'\n\t\t\t\t>\n\t\t\t\t\tVisit you facebook now\n\t\t\t\t</Button>\n\t\t\t</Col>\n\t\t</Row>\n\t)\n}\n\nexport default About\n","// import 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\nimport Landing from \"./components/layout/Landing\";\nimport Auth from \"./views/Auth\";\nimport ProtectedRoute from \"./components/routing/ProtectedRoute\";\nimport { connect } from \"react-redux\";\nimport { setAuth } from \"./actions\";\nimport { useEffect } from \"react\";\nimport Dashboard from \"./views/Dashboard\";\nimport About from \"./views/About\";\nimport PostContextProvider from \"./contexts/PostContext\";\nimport {loadUser} from \"./help\"\n\nfunction App({ setStateAuth }) {\n  \n\n  useEffect(() => {\n    // console.log(\"callback mounted\");\n    return loadUser({setStateAuth});\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <PostContextProvider>\n        <Routes>\n          <Route path=\"/\" element={<Landing />} />\n          <Route path=\"/login\" element={<Auth authRoute=\"login\" />} />\n          <Route path=\"/register\" element={<Auth authRoute=\"register\" />} />\n          <Route\n            path=\"/dashboard\"\n            element={\n              <ProtectedRoute>\n                <Dashboard />\n              </ProtectedRoute>\n            }\n          />\n          <Route\n            path=\"/about\"\n            element={\n              <ProtectedRoute>\n                <About />\n              </ProtectedRoute>\n            }\n          />\n        </Routes>\n      </PostContextProvider>\n    </BrowserRouter>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {};\n};\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    setStateAuth: (data) => {\n      dispatch(setAuth(data));\n    },\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\"\r\nimport auth from \"./auth\"\r\nconst rootReducers = combineReducers({\r\n  auth\r\n})\r\nexport default rootReducers\r\n\r\n","import { createStore } from \"redux\";\r\nimport rootReducers from \"./reducers\";\r\n\r\nconst store = createStore(\r\n  rootReducers\r\n)\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n// console.log('Store Products', store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}